@model SV20T1080053.Areas.Admin.Models.SaveMotorcycleViewModel
@{
    ViewBag.Title = "Thêm xe máy";
}

<form action="~/Admin/Motorcycle/Save" method="post" enctype="multipart/form-data">
    <input type="hidden" name="MotorcycleId" value="@Model.MotorcycleId" />
    <div class="form-group">
        <label for="MotocycleName">Tên xe:</label>
        <input type="text" class="form-control" id="MotocycleName" name="MotocycleName" value="@Model.MotocycleName">
        @Html.ValidationMessageFor(m => m.MotocycleName, "", new { style = "color: red;" })
    </div>
    <div class="form-group">
        <label for="BrandId">Hãng xe:</label>
        @Html.DropDownListFor(m => m.BrandId, new SelectList(Model.Brands, "BrandId", "BrandName"), "Chọn hãng xe", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.BrandId, "", new { style = "color: red;" })
    </div>
    <div class="form-group">
        <label for="ReleaseYear">Năm sản xuất:</label>
        <input type="date" class="form-control" id="ReleaseYear" name="ReleaseYear" value="@Model.ReleaseYear">
        @Html.ValidationMessageFor(m => m.ReleaseYear, "", new { style = "color: red;" })
    </div>
    <div class="form-group">
        <label for="Type">Loại xe:</label>
        <select class="form-control" id="Type" name="Type">
            <option value="">Chọn loại xe</option>
            <option value="Manual" @(Model.Type == SV20T1080053.DomainModels.Type.Manual ? "selected" : "")>Xe số</option>
            <option value="Automatic" @(Model.Type == SV20T1080053.DomainModels.Type.Automatic ? "selected" : "")>Xe tay ga</option>
        </select>
        @Html.ValidationMessageFor(m => m.Type, "", new { style = "color: red;" })
    </div>
    <div class="form-group">
        <label for="Color">Màu:</label>
        <input type="text" class="form-control" id="Color" name="Color" value="@Model.Color">
        @Html.ValidationMessageFor(m => m.Color, "", new { style = "color: red;" })
    </div>
    <div class="form-group">
        <label for="Amount">Giá thuê:</label>
        <input type="text" class="form-control" id="Amount" name="Amount" value="@Model.Amount">
        @Html.ValidationMessageFor(m => m.Amount, "", new { style = "color: red;" })
    </div>
    <div class="form-group">
        <label for="StatusName">Trạng thái:</label>
        <select class="form-control" id="StatusName" name="StatusName">
            <option value="">Chọn trạng thái</option>
            <option value="NotRented" @(Model.StatusName == SV20T1080053.DomainModels.StatusName.NotRented ? "selected" : "")>Chưa thuê</option>
            <option value="Rented" @(Model.StatusName == SV20T1080053.DomainModels.StatusName.Rented ? "selected" : "")>Đang thuê</option>
        </select>
        @Html.ValidationMessageFor(m => m.StatusName, "", new { style = "color: red;" })
    </div>
    <div class="form-group">
        <label for="Description">Mô tả:</label>
        <textarea class="form-control" id="Description" name="Description">@Model.Description</textarea>
        @Html.ValidationMessageFor(m => m.Description, "", new { style = "color: red;" })
    </div>
    <div class="form-group">
        <label for="Photo">Ảnh xe:</label>
        <input type="file" class="form-control" id="Photo" name="Photo" onchange="previewImage(event)">
        <div id="imagePreview" class="mt-2"></div>
        @Html.ValidationMessageFor(m => m.Photo, "", new { style = "color: red;" })
    </div>
    <button type="submit" class="btn btn-primary">Thêm mới</button>
</form>

<script>
    function previewImage(event) {
        var reader = new FileReader();
        reader.onload = function () {
            var imagePreview = document.getElementById('imagePreview');
            imagePreview.innerHTML = '<img src="' + reader.result + '" class="img-thumbnail" style="max-width: 200px; max-height: 200px;" />';
        };
        reader.readAsDataURL(event.target.files[0]);
    }
</script>
